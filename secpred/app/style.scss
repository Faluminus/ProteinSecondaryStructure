$bg: #f3f8fa;
$white: #fff;
$black: #4baeff;

@mixin transition(
  $property: all,
  $duration: 0.45s,
  $ease: cubic-bezier(0.65, 0, 0.076, 1)
) {
  transition: $property $duration $ease;
}

* {
  box-sizing: border-box;
  &::before,
  &::after {
    box-sizing: border-box;
  }
}
button {
  position: relative;
  display: inline-block;
  cursor: pointer;
  outline: none;
  border: 0;
  vertical-align: middle;
  text-decoration: none;
  background: transparent;
  padding: 0;
  font-size: inherit;
  font-family: inherit;
  &.learn-more {
    width: 12rem;
    height: auto;
    .circle {
      @include transition(all, 0.45s, cubic-bezier(0.65, 0, 0.076, 1));
      position: relative;
      display: block;
      margin: 0;
      width: 3rem;
      height: 3rem;
      background: $black;
      border-radius: 1.625rem;
      .icon {
        @include transition(all, 0.45s, cubic-bezier(0.65, 0, 0.076, 1));
        position: absolute;
        top: 0;
        bottom: 0;
        margin: auto;
        background: $white;
        &.arrow {
          @include transition(all, 0.45s, cubic-bezier(0.65, 0, 0.076, 1));
          left: 0.625rem;
          width: 1.125rem;
          height: 0.125rem;
          background: none;
          &::before {
            position: absolute;
            content: "";
            top: -0.25rem;
            right: 0.0625rem;
            width: 0.625rem;
            height: 0.625rem;
            border-top: 0.125rem solid #fff;
            border-right: 0.125rem solid #fff;
            transform: rotate(45deg);
          }
        }
      }
    }
    .button-text {
      @include transition(all, 0.45s, cubic-bezier(0.65, 0, 0.076, 1));
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      padding: 0.75rem 0;
      margin: 0 0 0 1.85rem;
      color: $black;
      font-weight: 700;
      line-height: 1.6;
      text-align: center;
      text-transform: uppercase;
    }
  }
  &:hover {
    .circle {
      width: 100%;
      .icon {
        &.arrow {
          background: $white;
          transform: translate(1rem, 0);
        }
      }
    }
    .button-text {
      color: $white;
    }
  }
}

@supports (display: grid) {
  #container {
    grid-area: main;
    align-self: center;
    justify-self: center;
  }
}


.ui-components {
  height: 100%;
  background-color: #000;
}

// 'DNA Spinner'
$cubic-bezier-standard : 0.000, 0.000, 0.230, 1;

@mixin increment-animation($time-default:.25, $loops:1) {
  @for $i from 1 through $loops {
    &:nth-child(#{$i}) {
      animation-delay: $i * $time-default + s;
    }
  }
}

@keyframes opacity {
	to {
    opacity: 1;
  }
}

@keyframes vertical1 {
	0%,
	100% {
		transform: translateY(0) scale(1);
	}

	50% {
		transform: translateY(3.5rem) scale(.25);
		
	}
}

@keyframes vertical2 {
	0%,
	100% {
		transform: translateY(3.5rem) scale(.25);
	}

	50% {
		transform: translateY(0) scale(1);
	}
}


.dna-spinner {
  display: block;
  width: 47.5rem;
  height: 8rem;
  opacity: 0;
  animation: opacity 500ms linear 1750ms forwards;

  .row {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    text-align: center;

    &.row-1 {
      margin-left: -.5rem;
      .span {
        background: #000000;
        animation: vertical1 2.5s ease-in-out infinite;
        @include increment-animation(.15, 12);
      }
    }

    &.row-2 {
      .span {
        background: #000000;
        animation: vertical2 2.5s ease-in-out infinite;
        @include increment-animation(.15, 12);
      }
    }
  }
  .span {
    display: inline-block;
    border-radius: 50%;
    width: 1rem;
    height: 1rem;
  }
}

